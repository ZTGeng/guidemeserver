var crypto = require('crypto'); 
var rand = require('csprng'); 
var mongoose = require('mongoose'); 
var nodemailer = require('nodemailer'); 
var user = require('config/models');  

var smtpTransport = nodemailer.createTransport("SMTP",{     
     auth: {         
          user: "guidemesfsu@gmail.com",        
          pass: "sfsu2016spring"        
          } 
});

var isPasswordValid = function(password) {
    return true;
}  

exports.cpass = function(token, opass, npass, callback) {  

    var new_salt = rand(160, 36); 
    var temp = new_salt + npass; 
    var new_hashed_password = crypto.createHash('sha512').update(temp).digest("hex");  

    user.find({token: token}, function(err, users){  
        if(users.length != 0) {  
            var salt = users[0].salt; 
            var hashed_password = users[0].hashed_password; 
            var temp1 = salt + opass; 
            var hashed = crypto.createHash('sha512').update(temp1).digest("hex");   

            if (hashed == hashed_password) { 
                // if (npass.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && npass.length > 4 && npass.match(/[0-9]/) && npass.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {  
                if (isPasswordValid(npass)) {
                    user.findOne({ email: email }, function (err, doc) {  
                        doc.hashed_password = new_hashed_password;   
                        doc.salt = new_salt;   
                        doc.save();  

                        callback({'response':"Password sucessfully changed.", 'res':true});
                    });
                } else {  
                    callback({'response':"New password is too weak.", 'res':false});  
                } 
            } else {  
                callback({'response':"Password is not correct.", 'res':false});  
            } 
        } else {  
            callback({'response':"Error while changing password.", 'res':false});  
        }  
    }); 
}  

exports.respass_init = function(email, callback) {  

    var code = rand(24, 24); 
    user.find({email: email}, function(err, users) {  
        if(users.length != 0){   
            user.findOne({ email: email }, function (err, doc){   
                doc.temp_str = code;   
                doc.save();  

                var mailOptions = {     
                    from: "GuideMe  <guidemesfsu@gmail.com>",     
                    to: email,     
                    subject: "Reset Password ",     
                    text: "Hello " + email + ".  Code to reset your Password is "+ code + ".\n\nRegards,\nGuideMe,\nSFSU.edu." 
                }  

                smtpTransport.sendMail(mailOptions, function(error, response) {     
                    if (error) {  
                        callback({'response':"Error while resetting password.", 'res':false});      
                    } else {  
                        callback({'response':"Check your Email and enter the verification code to reset your Password.", 'res':true});      
                    } 
                }); 
            }); 
        } else {
            callback({'response':"Email does not exist.", 'res':false});  
        } 
    }); 
}  

exports.respass_chg = function(email, code, npass, callback) {   

    user.find({email: email},function(err, users) {  
        if (users.length != 0) {  
            var code_saved = users[0].temp_str; 
            var salt =rand(160, 36); 
            var temp = salt + npass; 
            var hashed_password = crypto.createHash('sha512').update(temp).digest("hex");  

            if (code == code_saved) { 
                // if (npass.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && npass.length > 4 && npass.match(/[0-9]/) && npass.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) { 
                if (isPasswordValid(npass)) { 

                    user.findOne({ email: email }, function (err, doc) {   
                        doc.hashed_password= hashed_password;   
                        doc.salt = salt;   
                        doc.temp_str = "";   
                        doc.save();  

                        callback({'response':"Password sucessfully changed.", 'res':true});  
                    });
                } else {  
                    callback({'response':"New password is weak.", 'res':false});  
                } 
            } else {  
                callback({'response':"Code is not correct.", 'res':false});  
            } 
        } else {  
            callback({'response':"Email does not exist.",'res':false});  
        } 
    }); 
} 
